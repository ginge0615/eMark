node {
   def workspace = 'D:\\workspace\\Jenkins'
   
   withEnv(['node_modules_ref=D:\\workspace\\eMark\\FrontEnt\\node_modules', 
            'iis_website=D:\\workspace\\IIS_website', 
			'docker_images_path=D:\\workspace\\docker']) {
			
		stage('git clone') { // for display purposes
			dir("${workspace}") {
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'ginge', url: 'https://github.com/ginge0615/eMark.git']]])
			}
		}
		stage('Build') {
			dir("${workspace}\\FrontEnt") {
				bat script: '''
					set current_dir=%cd%
					
					if not exist %current_dir%\\node_modules (
						mkdir node_modules
						xcopy %node_modules_ref% %current_dir%\\node_modules /s /e /q
					)				
					npm run build
					'''
			}
			withMaven(jdk: 'jdk1.8_202', maven: 'maven') {
				dir("${workspace}\\MidTier\\EurekaServer") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
				dir("${workspace}\\MidTier\\MircroService-Item") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
				dir("${workspace}\\MidTier\\MircroService-Mast") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
				dir("${workspace}\\MidTier\\MircroService-Transaction") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
				dir("${workspace}\\MidTier\\MircroService-User") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
				dir("${workspace}\\MidTier\\ZuulGateway") {
					bat script: 'mvn clean package -Dmaven.test.skip=true'
				}
			}
		}
		stage('Deploy') {
			//Deploy FrontEnd to IIS
			dir("${workspace}\\FrontEnt\\dist\\FrontEnt") {
				bat script: '''
					set current_dir=%cd%
					
					if exist %iis_website% rd %iis_website% /s /q
					mkdir %iis_website%
					xcopy %current_dir% %iis_website% /s /e /q
				'''
			}
			dir("${workspace}\\MidTier\\EurekaServer\\target") {
				bat script: '''
					copy EurekaServer*.jar %docker_images_path%\\EurekaServer /Y 
					
					FOR /f "tokens=*" %i IN (\'docker ps -q --filter ancestor=eureka\') DO docker stop %i
					FOR /f "tokens=*" %i IN (\'docker ps -aq --filter ancestor=eureka\') DO docker rm %i
					
					cd %docker_images_path%\\EurekaServer
					docker build -t eureka:latest .
					docker run -p 9001:9001 -d eureka
				'''
			}
			dir("${workspace}\\MidTier\\MircroService-Item\\target") {
				bat script: 'copy MircroService-Item*.jar %docker_images_path%\\MircroService-Item /Y '
			}
			dir("${workspace}\\MidTier\\MircroService-Mast\\target") {
				bat script: 'copy MircroService-Mast*.jar %docker_images_path%\\MircroService-Mast /Y '
			}
			dir("${workspace}\\MidTier\\MircroService-Transaction\\target") {
				bat script: 'copy MircroService-Transaction*.jar %docker_images_path%\\MircroService-Transaction /Y '
			}
			dir("${workspace}\\MidTier\\MircroService-User\\target") {
				bat script: 'copy MircroService-User*.jar %docker_images_path%\\MircroService-User /Y '
			}
			dir("${workspace}\\MidTier\\ZuulGateway\\target") {
				bat script: 'copy ZuulGateway*.jar %docker_images_path%\\ZuulGateway /Y '
			}
		}
   }
}